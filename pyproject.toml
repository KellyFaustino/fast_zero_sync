[project]
name = "fast-zero"
version = "0.1.0"
description = ""
authors = [
    {name = "kelly_faustino",email = "kelly.faustino@cmsw.com"}
]
readme = "README.md"
requires-python = ">=3.12.0,<3.13.0"
dependencies = [
    "fastapi[standard] (>=0.115.8,<0.116.0)",
    "uvicorn (>=0.34.0,<0.35.0)"
]

[tool.poetry]
packages = [{include = "fast_zero", from = "src"}]


[tool.poetry.group.dev.dependencies]
ruff = "^0.9.6"
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
coverage = "^7.6.12"
taskipy = "^1.14.1"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
run = "uvicorn fast_zero.app:app --reload"

pre_test = "task lint && task format"  # Aqui adicionamos o format antes dos testes
test = "pytest -s -x --cov=fast_zero --cov-report=term-missing -v"
post_test = "coverage html -d htmlcov"

lint = "ruff check ."
format = "ruff check . --fix && ruff format ."

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
